{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/common\";\nfunction DialogRestauranteComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r1.msg);\n  }\n}\nexport class LoginRestauranteComponent {\n  constructor(router, fb, dialog, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.dialog = dialog;\n    this.authService = authService;\n    this.registrarUsuario = false;\n    this.hide = true;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n    this.submited = false;\n  }\n  openDialog(err) {\n    const dialogRef = this.dialog.open(DialogRestauranteComponent, {\n      width: '300px',\n      data: {\n        err: err\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  login() {\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    this.authService.login(email, password).subscribe(resp => {\n      //TODO Abrir página de login con datos del usuario\n      //* Recuperar objeto base de datos y cargar página según datos\n      console.log(resp);\n      if (resp) {\n        this.router.navigateByUrl('/dashboard');\n      }\n    }, err => {\n      let erroresEnviar = [];\n      let formErrors = err.error.errores === undefined;\n      if (!formErrors) {\n        // Errores al checkear si estan vacios email, contraseña y si el email está bien formado\n        Object.entries(err.error.errores).forEach(([key, value]) => {\n          console.log(value);\n          erroresEnviar.push(value);\n        });\n      } else {\n        // Errores del backend: pj usuario o contraseña incorrectos\n        erroresEnviar.push(err.error);\n      }\n      this.openDialog(erroresEnviar);\n    });\n  }\n}\nLoginRestauranteComponent.ɵfac = function LoginRestauranteComponent_Factory(t) {\n  return new (t || LoginRestauranteComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.AuthService));\n};\nLoginRestauranteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginRestauranteComponent,\n  selectors: [[\"app-loginRestaurante\"]],\n  decls: 33,\n  vars: 5,\n  consts: [[\"autosize\", \"\", 1, \"example-container\"], [\"mode\", \"over\", 1, \"example-sidenav\"], [\"drawer\", \"\"], [1, \"example-card\"], [\"id\", \"loginForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"example-container\"], [\"appearance\", \"fill\"], [\"autocomplete\", \"off\", \"type\", \"email\", \"formControlName\", \"email\", \"matInput\", \"\", \"placeholder\", \"tuCorreo@dominio.com\", \"required\", \"\"], [\"autocomplete\", \"off\", \"type\", \"password\", \"formControlName\", \"password\", \"matInput\", \"\", \"required\", \"\", 3, \"type\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/auth/registro\", \"routerLinkActive\", \"active\", \"ariaCurrentWhenActive\", \"page\"], [1, \"example-sidenav-content\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function LoginRestauranteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"mat-drawer-container\", 0)(1, \"mat-drawer\", 1, 2)(3, \"mat-card\", 3)(4, \"mat-card-header\")(5, \"mat-card-title\");\n      i0.ɵɵtext(6, \"Inicio de Sesi\\u00F3n con tu restaurante\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-card-subtitle\");\n      i0.ɵɵtext(8, \"Reg\\u00EDstra tu restaurante si a\\u00FAn no lo has hecho!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginRestauranteComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"mat-form-field\", 6)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Introduce tu email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"div\", 5)(18, \"mat-form-field\", 6)(19, \"mat-label\");\n      i0.ɵɵtext(20, \"Introduce tu contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 8);\n      i0.ɵɵelementStart(22, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginRestauranteComponent_Template_button_click_22_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(23, \"mat-icon\");\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(25, \"mat-card-actions\")(26, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function LoginRestauranteComponent_Template_button_click_26_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(27, \" Iniciar Sesi\\u00F3n con Restaurante \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 11);\n      i0.ɵɵtext(29, \" Registrar restaurante \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(30, \"div\", 12)(31, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function LoginRestauranteComponent_Template_button_click_31_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.toggle());\n      });\n      i0.ɵɵtext(32, \" Iniciar Sesi\\u00F3n con tu restaurante \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n    }\n  },\n  dependencies: [i1.RouterLink, i1.RouterLinkActive, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i5.MatIcon, i6.MatDrawer, i6.MatDrawerContainer, i7.MatButton, i8.MatFormField, i8.MatLabel, i8.MatSuffix, i9.MatCard, i9.MatCardHeader, i9.MatCardContent, i9.MatCardTitle, i9.MatCardSubtitle, i9.MatCardActions, i10.MatInput],\n  styles: [\".example-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-sidenav-content[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.example-sidenav[_ngcontent-%COMP%] {\\r\\n  padding: 100px;\\r\\n}\\r\\n\\r\\n\\r\\n.example-card[_ngcontent-%COMP%] {\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n\\r\\n.example-container[_ngcontent-%COMP%]{\\r\\n  border: none\\r\\n}\\r\\n\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9wYWdlcy9sb2dpblJlc3RhdXJhbnRlL2xvZ2luUmVzdGF1cmFudGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Q0FFQztBQUNEO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOztDQUVDO0FBQ0Q7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7O0NBRUM7QUFDRDtFQUNFO0FBQ0Y7O0FBRUE7O0NBRUM7QUFDRDtFQUNFLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbkNzcyBwYXJhIGVsIG5hdmJhclxyXG4qL1xyXG4uZXhhbXBsZS1jb250YWluZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNpZGVuYXYtY29udGVudCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmV4YW1wbGUtc2lkZW5hdiB7XHJcbiAgcGFkZGluZzogMTAwcHg7XHJcbn1cclxuXHJcbi8qXHJcbkNzcyBwYXJhIGxhIGNhcmRcclxuKi9cclxuLmV4YW1wbGUtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuLypcclxuQ3NzIHBhcmEgZGl2IHF1ZSBjb250aWVuZSBlbCBmb3JtdWxhcmlvXHJcbiovXHJcbi5leGFtcGxlLWNvbnRhaW5lcntcclxuICBib3JkZXI6IG5vbmVcclxufVxyXG5cclxuLypcclxuQ3NzIHBhcmEgbG9zIGNhbXBvcyBpbnB1dCBcclxuKi9cclxubWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport class DialogRestauranteComponent {\n  constructor(dialogRef, data) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n}\nDialogRestauranteComponent.ɵfac = function DialogRestauranteComponent_Factory(t) {\n  return new (t || DialogRestauranteComponent)(i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nDialogRestauranteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogRestauranteComponent,\n  selectors: [[\"app-dialog\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n  template: function DialogRestauranteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Errores en formulario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtemplate(3, DialogRestauranteComponent_li_3_Template, 2, 1, \"li\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function DialogRestauranteComponent_Template_button_click_5_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(6, \"Cerrar\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data.err);\n    }\n  },\n  dependencies: [i11.NgForOf, i7.MatButton, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","i0","LoginRestauranteComponent","constructor","router","fb","dialog","authService","group","email","required","password","openDialog","err","dialogRef","open","DialogRestauranteComponent","width","data","afterClosed","subscribe","result","login","loginForm","value","resp","console","log","navigateByUrl","erroresEnviar","formErrors","error","errores","undefined","Object","entries","forEach","key","push","selectors","decls","vars","consts","template","ctx","onNoClick","close"],"sourceRoot":"","sources":["C:\\Users\\victo\\OneDrive\\Escritorio\\TFG\\TFG-Código\\Frontend\\src\\app\\auth\\pages\\loginRestaurante\\loginRestaurante.component.ts","C:\\Users\\victo\\OneDrive\\Escritorio\\TFG\\TFG-Código\\Frontend\\src\\app\\auth\\pages\\loginRestaurante\\dialogRestaurante.html","C:\\Users\\victo\\OneDrive\\Escritorio\\TFG\\TFG-Código\\Frontend\\src\\app\\auth\\pages\\loginRestaurante\\loginRestaurante.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-loginRestaurante',\n  templateUrl: './loginRestaurante.component.html',\n  styleUrls: ['./loginRestaurante.component.css'],\n})\nexport class LoginRestauranteComponent {\n  registrarUsuario: Boolean = false;\n  hide: Boolean = true;\n\n  public loginForm = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required]],\n  });\n  submited = false;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    public dialog: MatDialog,\n    private authService: AuthService\n  ) {}\n\n  openDialog(err: any): void {\n    const dialogRef = this.dialog.open(DialogRestauranteComponent, {\n      width: '300px',\n      data: { err: err },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {});\n  }\n\n  login() {\n    const { email, password } = this.loginForm.value;\n    this.authService.login(email!, password!).subscribe(\n      (resp) => {\n        //TODO Abrir página de login con datos del usuario\n        //* Recuperar objeto base de datos y cargar página según datos\n        console.log(resp);\n        if (resp) {\n          this.router.navigateByUrl('/dashboard');\n        }\n      },\n      (err) => {\n        let erroresEnviar: any = [];\n        let formErrors = err.error.errores === undefined;\n        if (!formErrors) {\n          // Errores al checkear si estan vacios email, contraseña y si el email está bien formado\n          Object.entries(err.error.errores).forEach(([key, value]) => {\n            console.log(value);\n            erroresEnviar.push(value);\n          });\n        } else {\n          // Errores del backend: pj usuario o contraseña incorrectos\n          erroresEnviar.push(err.error);\n        }\n        this.openDialog(erroresEnviar);\n      }\n    );\n  }\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: 'dialogRestaurante.html',\n})\nexport class DialogRestauranteComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DialogRestauranteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Errores en formulario</h1>\r\n<div mat-dialog-content>\r\n  <li *ngFor=\"let error of data.err\">{{error.msg}}</li>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Cerrar</button>\r\n</div>\r\n","<mat-drawer-container class=\"example-container\" autosize>\r\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"over\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-header>\r\n        <mat-card-title>Inicio de Sesión con tu restaurante</mat-card-title>\r\n        <mat-card-subtitle\r\n          >Regístra tu restaurante si aún no lo has hecho!</mat-card-subtitle\r\n        >\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" id=\"loginForm\">\r\n          <div class=\"example-container\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Introduce tu email</mat-label>\r\n              <input\r\n                autocomplete=\"off\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n                matInput\r\n                placeholder=\"tuCorreo@dominio.com\"\r\n                required\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <br />\r\n          <div class=\"example-container\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Introduce tu contraseña</mat-label>\r\n              <input\r\n                autocomplete=\"off\"\r\n                type=\"password\"\r\n                formControlName=\"password\"\r\n                matInput\r\n                [type]=\"hide ? 'password' : 'text'\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                mat-icon-button\r\n                matSuffix\r\n                (click)=\"hide = !hide\"\r\n                [attr.aria-label]=\"'Hide password'\"\r\n                [attr.aria-pressed]=\"hide\"\r\n              >\r\n                <mat-icon>{{\r\n                  hide ? \"visibility_off\" : \"visibility\"\r\n                }}</mat-icon>\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button\r\n          mat-raised-button\r\n          color=\"accent\"\r\n          type=\"submit\"\r\n          (click)=\"login()\"\r\n        >\r\n          Iniciar Sesión con Restaurante\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          color=\"accent\"\r\n          routerLink=\"/auth/registro\"\r\n          routerLinkActive=\"active\"\r\n          ariaCurrentWhenActive=\"page\"\r\n        >\r\n          Registrar restaurante\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </mat-drawer>\r\n\r\n  <div class=\"example-sidenav-content\">\r\n    <button\r\n      type=\"button\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"drawer.toggle()\"\r\n    >\r\n      Iniciar Sesión con tu restaurante\r\n    </button>\r\n  </div>\r\n</mat-drawer-container>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}